# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

try:
    def my_def(num1, num2):
        res = round(num1 / num2, 2)
        return res
    num1 = int(input('введите число: '))
    num2 = int(input('введите число: '))
    print(my_def(num1, num2))
except ZeroDivisionError:
    print('На ноль делить нельзя!')

# 2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.

def my_def(name, surname, birth_year, email, phone_number):
    print(f'name: {name}, surname: {surname}, birth_year: {birth_year}, email: {email}, phone_number: {phone_number}')

name = input('введите ваше имя: ')
surname = input('введите вашу фамилию: ')
birth_year = input('введите ваш год рождения: ')
email = input('введите ваш адрес электронной почты: ')
phone_number = input('введите ваш телефонный номер: ')

my_def(name, surname, birth_year, email, phone_number)

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
def my_func(ar1, ar2, ar3):
    tmp = [ar1, ar2, ar3]
    need = []
    count = 1
    while count < 2:
        for i in tmp:
            max1 = max(tmp)
            need.append(max1)
            tmp.remove(max1)
            count = count + 1
    res = sum(need)
    return res

ar1 = int(input('введите число: '))
ar2 = int(input('введите число: '))
ar3 = int(input('введите число: '))

result = my_func(ar1, ar2, ar3)
print(f'сумма наибольших двух аргументов это: {result}')

# 4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y.
# Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x, y):
    res1 = x ** y
    return res1

try:
    while True:
        x = int(input('Введите действительное положительное число: '))
        if x > 0:
            break
        print('надо положительное число!')
except ValueError:
    print('Целое число!!! Перезапусти программу!!!')

try:
    while True:
        y = int(input('Введите целое отрицательное число: '))
        if y < 0:
            break
        print('Надо меньше нуля!')
except ValueError:
    print('Целое число!!! Перезапусти программу!!!')


result1 = my_func(x, y)
print(result1)

def my_func(x, y):
    res2 = pow(x, y)
    return res2

try:
    while True:
        x = int(input('Введите действительное положительное число: '))
        if x > 0:
            break
        print('надо положительное число!')
except ValueError:
    print('Целое число!!! Перезапусти программу!!!')

try:
    while True:
        y = int(input('Введите целое отрицательное число: '))
        if y < 0:
            break
        print('Надо меньше нуля!')
except ValueError:
    print('Целое число!!! Перезапусти программу!!!')

result2 = my_func(x, y)
print(result2)

# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
# Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.

# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее
# сумме и после этого завершить программу.
def my_de():
    ints = []
    while True:
        q = input('введите числа через пробел (если захотите закончить то напечатайте stop): ').split()
        for el in q:
            if el == 'stop':
                for i in range(0, q.index('stop')):
                    ints.append(int(q[i]))
                    s = sum(ints)
                print(s)
                return
        for elements in q:
            ints.append(int(elements))
        s = sum(ints)
        print(s)
my_de()

# 6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text
def int_func():
    q = input('введите слова из маленьких латинских букв: ').lower().title()
    print(q)
int_func()

# 7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().
def int_func():
    q = input('введите слова из маленьких латинских букв: ').lower().title()
    print(q)
int_func()